/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package karkov.ui.showRequest;

import karkov.models.Request;
import karkov.repository.RepositoryRequest;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author blackhawk
 */
public class SearchRequest extends javax.swing.JPanel {

    /**
     * Creates new form searchRequest
     */
    public SearchRequest() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        searchIdComboBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchTable = new javax.swing.JTable();

        jPanel1.setBackground(new java.awt.Color(33, 158, 188));

        searchIdComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Request ID" }));
        searchIdComboBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchIdComboBoxFocusGained(evt);
            }
        });
        searchIdComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchIdComboBoxActionPerformed(evt);
            }
        });

        searchTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Zone", "Apt", "Priority", "Limit"
            }
        ));
        jScrollPane1.setViewportView(searchTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(searchIdComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(733, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(searchIdComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchIdComboBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchIdComboBoxFocusGained
        // TODO add your handling code here:
        for(Request request : RepositoryRequest.getRequestArray()){
            String idS = String.valueOf(request.getId());
            searchIdComboBox.addItem(idS);
        }
    }//GEN-LAST:event_searchIdComboBoxFocusGained

    private void searchIdComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchIdComboBoxActionPerformed
        DefaultTableModel model = (DefaultTableModel) searchTable.getModel();
        if (!searchIdComboBox.getSelectedItem().equals("Request ID")) {
            int id = Integer.parseInt((String) searchIdComboBox.getSelectedItem());

            model.setRowCount(0);
            model.addRow(new Object[]{
                    searchIdComboBox.getSelectedItem(),
                    RepositoryRequest.getRequest(id).getZone(),
                    RepositoryRequest.getRequest(id).getAddress(),
                    RepositoryRequest.getRequest(id).getPrority(),
                    RepositoryRequest.getRequest(id).getLimitTime(),
            });
        }

    }//GEN-LAST:event_searchIdComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> searchIdComboBox;
    private javax.swing.JTable searchTable;
    // End of variables declaration//GEN-END:variables
}
